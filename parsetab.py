
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/right^NUMBERstatement  : expr_cont\n           expression : atom\n           expr_cont  : atomexpression : expression '+' expression\n           expr_cont  : expr_cont  '+' expressionexpression : expression '-' expression\n           expr_cont  :  expr_cont '-' expressionexpression : expression '*' expression\n           expr_cont  :  expr_cont '*' expressionexpression : expression '/' expression\n           expr_cont  :  expr_cont '/' expression expression : expression '^' expression\n            expr_cont  :  expr_cont '^' expressionexpression : '-' atomatom : '(' expression ')'expr_cont : atom : NUMBERatom : NUMBER '.' NUMBER "
    
_lr_action_items = {'+':([0,2,3,5,11,12,15,16,17,18,19,20,26,27,28,29,30,31,32,],[-16,6,-3,-17,21,-2,-5,-7,-9,-11,-13,-15,-14,-18,-4,-6,-8,-10,-12,]),'-':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,],[-16,7,-3,13,-17,13,13,13,13,13,22,-2,-5,-7,-9,-11,-13,-15,13,13,13,13,13,-14,-18,-4,-6,-8,-10,-12,]),'*':([0,2,3,5,11,12,15,16,17,18,19,20,26,27,28,29,30,31,32,],[-16,8,-3,-17,23,-2,23,23,-9,-11,-13,-15,-14,-18,23,23,-8,-10,-12,]),'/':([0,2,3,5,11,12,15,16,17,18,19,20,26,27,28,29,30,31,32,],[-16,9,-3,-17,24,-2,24,24,-9,-11,-13,-15,-14,-18,24,24,-8,-10,-12,]),'^':([0,2,3,5,11,12,15,16,17,18,19,20,26,27,28,29,30,31,32,],[-16,10,-3,-17,25,-2,25,25,25,25,25,-15,-14,-18,25,25,25,25,25,]),'$end':([0,1,2,3,5,12,15,16,17,18,19,20,26,27,28,29,30,31,32,],[-16,0,-1,-3,-17,-2,-5,-7,-9,-11,-13,-15,-14,-18,-4,-6,-8,-10,-12,]),'(':([0,4,6,7,8,9,10,13,21,22,23,24,25,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NUMBER':([0,4,6,7,8,9,10,13,14,21,22,23,24,25,],[5,5,5,5,5,5,5,5,27,5,5,5,5,5,]),')':([5,11,12,20,26,27,28,29,30,31,32,],[-17,20,-2,-15,-14,-18,-4,-6,-8,-10,-12,]),'.':([5,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expr_cont':([0,],[2,]),'atom':([0,4,6,7,8,9,10,13,21,22,23,24,25,],[3,12,12,12,12,12,12,26,12,12,12,12,12,]),'expression':([4,6,7,8,9,10,21,22,23,24,25,],[11,15,16,17,18,19,28,29,30,31,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expr_cont','statement',1,'p_statement_expr','calc.py',48),
  ('expression -> atom','expression',1,'p_statement_expr','calc.py',49),
  ('expr_cont -> atom','expr_cont',1,'p_statement_expr','calc.py',50),
  ('expression -> expression + expression','expression',3,'p_expression_add','calc.py',54),
  ('expr_cont -> expr_cont + expression','expr_cont',3,'p_expression_add','calc.py',55),
  ('expression -> expression - expression','expression',3,'p_expression_sub','calc.py',62),
  ('expr_cont -> expr_cont - expression','expr_cont',3,'p_expression_sub','calc.py',63),
  ('expression -> expression * expression','expression',3,'p_expression_mul','calc.py',70),
  ('expr_cont -> expr_cont * expression','expr_cont',3,'p_expression_mul','calc.py',71),
  ('expression -> expression / expression','expression',3,'p_expression_div','calc.py',78),
  ('expr_cont -> expr_cont / expression','expr_cont',3,'p_expression_div','calc.py',79),
  ('expression -> expression ^ expression','expression',3,'p_expression_exp','calc.py',89),
  ('expr_cont -> expr_cont ^ expression','expr_cont',3,'p_expression_exp','calc.py',90),
  ('expression -> - atom','expression',2,'p_atom_uminus','calc.py',107),
  ('atom -> ( expression )','atom',3,'p_atom_group','calc.py',112),
  ('expr_cont -> <empty>','expr_cont',0,'p_expr_previous','calc.py',118),
  ('atom -> NUMBER','atom',1,'p_expression_number','calc.py',122),
  ('atom -> NUMBER . NUMBER','atom',3,'p_expresson_decimal','calc.py',126),
]
