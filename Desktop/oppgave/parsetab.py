
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "rightMORADDMORSUBrightMORMULMORDIVleft+-left*/rightUMINUSNUMBERstatement : expressionexpression : expression '+' expression\n                      | expression '-' expression\n                      | expression '*' expression\n                      | expression '/' expression statement : '+' expression %prec MORADD\n                      | '-' expression %prec MORSUB\n                      | '*' expression %prec MORMUL\n                      | '/' expression %prec MORDIV expression : '(' '-' expression ')' %prec UMINUSexpression : '(' expression ')'expression : NUMBER"
    
_lr_action_items = {'+':([0,2,8,13,14,15,16,18,19,20,21,22,23,24,25,],[3,9,-12,9,9,9,9,9,-2,-3,-4,-5,9,-11,-10,]),'-':([0,2,7,8,13,14,15,16,18,19,20,21,22,23,24,25,],[4,10,17,-12,10,10,10,10,10,-2,-3,-4,-5,10,-11,-10,]),'*':([0,2,8,13,14,15,16,18,19,20,21,22,23,24,25,],[5,11,-12,11,11,11,11,11,11,11,-4,-5,11,-11,-10,]),'/':([0,2,8,13,14,15,16,18,19,20,21,22,23,24,25,],[6,12,-12,12,12,12,12,12,12,12,-4,-5,12,-11,-10,]),'(':([0,3,4,5,6,7,9,10,11,12,17,],[7,7,7,7,7,7,7,7,7,7,7,]),'NUMBER':([0,3,4,5,6,7,9,10,11,12,17,],[8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,2,8,13,14,15,16,19,20,21,22,24,25,],[0,-1,-12,-6,-7,-8,-9,-2,-3,-4,-5,-11,-10,]),')':([8,18,19,20,21,22,23,24,25,],[-12,24,-2,-3,-4,-5,25,-11,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,3,4,5,6,7,9,10,11,12,17,],[2,13,14,15,16,18,19,20,21,22,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',52),
  ('expression -> expression + expression','expression',3,'p_expression_binop','calc.py',56),
  ('expression -> expression - expression','expression',3,'p_expression_binop','calc.py',57),
  ('expression -> expression * expression','expression',3,'p_expression_binop','calc.py',58),
  ('expression -> expression / expression','expression',3,'p_expression_binop','calc.py',59),
  ('statement -> + expression','statement',2,'p_expression_more','calc.py',74),
  ('statement -> - expression','statement',2,'p_expression_more','calc.py',75),
  ('statement -> * expression','statement',2,'p_expression_more','calc.py',76),
  ('statement -> / expression','statement',2,'p_expression_more','calc.py',77),
  ('expression -> ( - expression )','expression',4,'p_expression_uminus','calc.py',94),
  ('expression -> ( expression )','expression',3,'p_expression_group','calc.py',99),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',103),
]
